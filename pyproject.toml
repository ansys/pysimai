[project]
name = "ansys-simai-core"
version = "0.0.1"
description = "A python wrapper for Ansys SimAI"
authors = [
    {name = "ANSYS, Inc.", email = "pyansys.maintainers@ansys.com"}
]
license = {file = "LICENSE"}
readme = "README.rst"
requires-python = ">=3.9,<4"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "requests>=2.31.0,<3",
    "requests_toolbelt>=1.0.0,<2",
    "tomli>=2.0.1,<3",
    "pydantic>=2.5.1,<3",
    "semver>=3.0.2",
    "sseclient-py>=1.8.0,<3",
    "wakepy>=0.7.2",
    "tqdm>=4.66.1",
]

[project.module]
name = "ansys.simai.core.api"

[tool.flit.module]
name = "ansys.simai.core.api"

[tool.pdm.dev-dependencies]
tests = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.6.1",
    "responses>=0.23.0",
    "coverage[toml]>=7.0",
    "pyjwt>=2.4.0"
]
docs = [
    "sphinx>=7.2.0",
    "autodoc-pydantic>=2.0.0",
    "ansys-sphinx-theme>=0.12.5"
]

[tool.pdm.scripts]
lint = "pre-commit run --all-files"

[project.urls]
Bugs = "https://github.com/ansys/pysimai/issues"
Documentation = "https://simai.docs.pyansys.com"
Source = "https://github.com/ansys/pysimai"
Discussions = "https://github.com/ansys/pysimai/discussions"
Releases = "https://github.com/ansys/pysimai/releases"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.ruff]
line-length = 100
select = [
  # "A", # flake8-builtins
  "B", # flake8-bugbear
  # "BLE", # flake8-blind-except
  # "C4", # flake8-comprehensions
  # "C90", # mccabe
  # "D", # pydocstyle
  # "DJ", # flake8-django
  # "DTZ", # flake8-datetimez
  "E", # pycodestyle errors
  # "ERA", # eradicate
  # "EXE", # flake8-executable
  "F", # pyflakes
  # "G", # flake8-logging-format
  "I", # isort
  # "ICN", # flake8-import-conventions
  # "ISC", # flake8-implicit-str-concat
  # "N", # pep8-naming
  # "PIE", # flake8-pie
  # "PLC", # pylint - convention
  # "PLE", # pylint - error
  # "PLW", # pylint - warning
  # "PTH", # flake8-use-pathlib
  # "Q", # flake8-quotes
  # "RET", # flake8-return
  # "RUF", # Ruff-specific rules
  # "S", # flake8-bandit
  # "SIM", # flake8-simplify
  # "T10", # flake8-debugger
  # "T20", # flake8-print
  # "TCH", # flake8-type-checking
  # "TID", # flake8-tidy-imports
  # "UP", # pyupgrade
  # "W", # pycodestyle - warning
  # "YTT", # flake8-2020
]
ignore = [
  # "A003", # flake8-builtins - class attribute {name} is shadowing a python builtin
  # "B010", # flake8-bugbear - do not call setattr with a constant attribute value
  "D100", # pydocstyle - missing docstring in public module
  "D101", # pydocstyle - missing docstring in public class
  "D102", # pydocstyle - missing docstring in public method
  "D103", # pydocstyle - missing docstring in public function
  "D104", # pydocstyle - missing docstring in public package
  "D105", # pydocstyle - missing docstring in magic method
  "D106", # pydocstyle - missing docstring in public nested class
  "D107", # pydocstyle - missing docstring in __init__
  "D202", # pydocstyle - no blank lines allowed after function docstring
  "D205", # pydocstyle - 1 blank line required between summary line and description
  "D415", # pydocstyle - first line should end with a period, question mark, or exclamation point
  "E501", # pycodestyle line too long, handled by formatting
  "PLW2901", # pylint - for loop variable overwritten by assignment target
  "RUF012", # Ruff-specific rule - annotated with classvar
  "ISC001", # Ruff formatter incompatible
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.coverage.run]
source = ["ansys.simai.core"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"
