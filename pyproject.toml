# Using PDM with flit backend
[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ansys-simai-core"
version = "0.1.0"
description = "A python wrapper for Ansys SimAI"
authors = [
    {name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"},
]
maintainers = [
    {name = "PyAnsys developers", email = "pyansys.maintainers@ansys.com"},
]
license = {file = "LICENSE"}
readme = "README.rst"
requires-python = ">=3.9,<4"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "requests>=2.31.0,<3",
    "requests_toolbelt>=1.0.0,<2",
    "tomli>=2.0.1,<3",
    "pydantic>=2.5.1,<3",
    "semver>=3.0.2",
    "sseclient-py>=1.8.0,<3",
    "wakepy>=0.7.2",
    "tqdm>=4.66.1",
]

[project.module]
name = "ansys.simai.core"

[tool.flit.module]
name = "ansys.simai.core"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.6.1",
    "responses>=0.23.0",
    "coverage[toml]>=7.0",
    "pyjwt>=2.4.0"
]
doc = [
    "sphinx>=7.2.0",
    "autodoc-pydantic>=2.0.0",
    "ansys-sphinx-theme>=0.12.5",
    "blacken-docs>=1.16.0"
]
linting = [
    "ruff",
    "blacken-docs",
    "pre-commit"
]

[tool.pdm.scripts]
lint = "pre-commit run --all-files"
test = "pytest --cov=ansys --cov-report=term --cov-report=html:./cov/html tests -vv"

[project.urls]
Bugs = "https://github.com/ansys/pysimai/issues"
Documentation = "https://simai.docs.pyansys.com"
Source = "https://github.com/ansys/pysimai"
Discussions = "https://github.com/ansys/pysimai/discussions"
Releases = "https://github.com/ansys/pysimai/releases"

[tool.ruff]
line-length = 100
select = [
  # "A", # flake8-builtins
  # "ANN", # flake8-annotations
  # "ARG", # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  # "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  # "C90", # mccabe
  "CPY", # flake8-copyright
  "D", # pydocstyle
  # "DJ", # flake8-django
  # "DTZ", # flake8-datetimez
  "E", # pycodestyle errors
  # "EM", # flake8-errmsg
  "ERA", # eradicate
  "EXE", # flake8-executable
  "F", # pyflakes
  # "FA", # flake8-future-annotations
  # "FBT", # flake8-boolean-trap
  # "FIX", # flake8-fixme
  "FLY", # flying
  "FURB", # refurb
  # "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "INP", # flake8-no-pep420
  "LOG", # flake8-logging
  # "N", # pep8-naming
  # "PD", # pandas-vet
  "PIE", # flake8-pie
  "PLC", # pylint - convention
  "PLE", # pylint - error
  # "PLR", # pylint - refactor
  "PLW", # pylint - warning
  # "PT", # flake8-pytest-style
  # "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "Q", # flake8-quotes
  # "RET", # flake8-return
  "RSE", # flake8-raise
  # "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  # "SLF", # flake8-self
  "SLOT", # flake8-slot
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  # "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  # "TRIO", # flake8-trio
  # "TRY", # tryceratops
  # "UP", # pyupgrade
  "W", # pycodestyle - warning
  "YTT", # flake8-2020
]
ignore = [
  "D100", # pydocstyle - missing docstring in public module
  "D101", # pydocstyle - missing docstring in public class
  "D103", # pydocstyle - missing docstring in public function
  "D104", # pydocstyle - missing docstring in public package
  "D105", # pydocstyle - missing docstring in magic method
  "D106", # pydocstyle - missing docstring in public nested class
  "D107", # pydocstyle - missing docstring in __init__
  "D202", # pydocstyle - no blank lines allowed after function docstring
  "D205", # pydocstyle - 1 blank line required between summary line and description
  "E501", # pycodestyle line too long, handled by formatting
  "ISC001", # Ruff formatter incompatible
  "S101", # flake8-bandit - use of assert
]
target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"src/ansys/simai/core/{api,utils}/*" = ["D102"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["ansys.simai.core"]

[tool.coverage.run]
source = ["ansys.simai.core"]

[tool.coverage.report]
show_missing = true

